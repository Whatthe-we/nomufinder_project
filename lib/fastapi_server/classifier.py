import google.generativeai as genai
import os
import random
from dotenv import load_dotenv
from fastapi import APIRouter
from pydantic import BaseModel
from typing import Optional

# 라우터 초기화
router = APIRouter()

# 전역 변수로 모델 참조 저장 (main.py에서 설정)
model = None

def set_model(gemini_model):
    """main.py에서 초기화된 모델을 설정하는 함수"""
    global model
    model = gemini_model

# 사용자 입력용 모델
class UserInput(BaseModel):
    text: str

# 카테고리별 Few-shot 예제 목록
fewshot_examples = [
    # ------------------------- 사업주용 -------------------------
    # 부당해고
    ("무단결근한 직원의 해고가 가능한지 궁금해요", "부당해고"),
    ("신규 사업 개시로 인해 인력 구조조정이 필요해요", "부당해고"),
    ("수습 기간 중 해고 시 주의할 점이 있나요?", "부당해고"),
    ("업무 능력 부족으로 해고하려면 어떤 절차가 필요하나요?", "부당해고"),
    ("직원에게 권고사직을 제안하고 싶은데 괜찮을까요?", "부당해고"),

    # 부당징계
    ("지각이 잦은 직원에게 징계 가능한가요?", "부당징계"),
    ("회사 이미지 손상으로 인한 징계 절차를 알고 싶어요", "부당징계"),
    ("경고장 발부 없이 징계 가능한가요?", "부당징계"),
    ("징계 사유로 사적 SNS 활동이 포함될 수 있나요?", "부당징계"),
    ("동료 간 불화로 인한 징계 절차가 궁금해요", "부당징계"),

    # 임금체불
    ("급여 이체가 지연되었는데 어떻게 대응해야 할까요?", "임금체불"),
    ("연장근로 수당을 미지급한 상황입니다", "임금체불"),
    ("임금 산정 기준 변경 관련 문의입니다", "임금체불"),
    ("퇴직금 정산 기준이 헷갈립니다", "임금체불"),
    ("전 직원의 임금 지급 누락 건 처리 방법이 궁금합니다", "임금체불"),

    # 직장내 성희롱
    ("성희롱 신고가 접수됐을 때 기업의 책임은?", "직장 내 성희롱"),
    ("가해자로 지목된 직원을 어떻게 처리해야 할까요?", "직장 내 성희롱"),
    ("성희롱 예방 교육을 의무적으로 해야 하나요?", "직장 내 성희롱"),
    ("사내 성희롱 조사가 필요한 상황입니다", "직장 내 성희롱"),
    ("2차 가해를 방지하려면 어떤 조치가 필요한가요?", "직장 내 성희롱"),

    # 직장내 괴롭힘
    ("직원이 괴롭힘을 당했다고 주장해요", "직장 내 괴롭힘"),
    ("부서장 간 갈등이 조직에 영향을 줍니다", "직장 내 괴롭힘"),
    ("익명 제보에 대한 조사 의무가 있나요?", "직장 내 괴롭힘"),
    ("괴롭힘 가해자에 대한 조치 가이드가 있나요?", "직장 내 괴롭힘"),
    ("신고 이후 조직 분위기 관리를 어떻게 하나요?", "직장 내 괴롭힘"),

    # 산업재해
    ("산재 발생 후 회사 책임 범위를 알고 싶어요", "산업재해"),
    ("산업재해 발생 시 고용 유지 방법이 궁금합니다", "산업재해"),
    ("안전 조치 미흡으로 인한 사고 발생 대응법은?", "산업재해"),
    ("작업장 내 보호 장비 지급 기준은 어떻게 되나요?", "산업재해"),
    ("산재보험 보상 외 추가 지원 방안이 있을까요?", "산업재해"),

    # 노동조합
    ("노조가 단체행동을 예고했어요. 대응법이 있나요?", "노동조합"),
    ("노조와의 단체교섭은 언제부터 시작해야 하나요?", "노동조합"),
    ("노조 회의 시간이 근무시간에 포함되나요?", "노동조합"),
    ("비조합원 직원이 불만을 제기합니다", "노동조합"),
    ("노사협의회와 노조는 어떻게 다르죠?", "노동조합"),

    # 기업자문
    ("직원 평가 기준을 새로 만들고 싶어요", "기업자문"),
    ("내부 규정을 리뉴얼하려 합니다", "기업자문"),
    ("기업 인사 시스템을 개선하고 싶어요", "기업자문"),
    ("복잡한 인사관리 구조에 대해 자문받고 싶어요", "기업자문"),
    ("근태 관리 시스템을 개선하고자 합니다", "기업자문"),

    # 컨설팅
    ("근로자 만족도 조사 설계가 필요합니다", "컨설팅"),
    ("인사제도 개선 프로젝트를 시작하려 해요", "컨설팅"),
    ("노무 관련 외부 자문을 받고 싶어요", "컨설팅"),
    ("외부 기관 컨설팅과 계약할 예정입니다", "컨설팅"),
    ("회사의 HR 구조를 진단하고 싶어요", "컨설팅"),

    # 급여 아웃소싱
    ("급여 시스템을 외부에 맡기려 합니다", "급여 아웃소싱"),
    ("퇴직 정산을 자동화하고 싶어요", "급여 아웃소싱"),
    ("외부 급여 컨설팅 업체 추천이 필요해요", "급여 아웃소싱"),
    ("급여 관련 민원 처리를 외부에 위탁하고 싶어요", "급여 아웃소싱"),
    ("복잡한 세금 신고를 아웃소싱하려 합니다", "급여 아웃소싱"),

    # ------------------------- 근로자용 -------------------------
    # 부당해고
    ("정당한 이유 없이 해고 통보를 받았어요", "부당해고"),
    ("이유 설명 없이 출근하지 말라고 했어요", "부당해고"),
    ("재계약 거절이 부당한 해고인가요?", "부당해고"),
    ("병가 중 해고 통보를 받았습니다", "부당해고"),
    ("입사한 지 3개월 만에 해고됐어요", "부당해고"),

    # 부당징계
    ("출근 태도 문제로 갑자기 징계를 받았어요", "부당징계"),
    ("징계 전에 설명도 듣지 못했습니다", "부당징계"),
    ("징계 사유가 너무 모호해요", "부당징계"),
    ("동료와의 사소한 다툼으로 징계를 받았어요", "부당징계"),
    ("경고장을 받은 후 바로 정직 처분됐어요", "부당징계"),

    # 근로계약
    ("채용 시 설명과 다른 조건이 적혀있어요", "근로계약"),
    ("정규직이라더니 계약직이었어요", "근로계약"),
    ("계약 내용을 변경하면서 설명이 없었어요", "근로계약"),
    ("근로계약서를 아직도 안 줬어요", "근로계약"),
    ("근무 시작일 전 계약서를 썼어야 했던 거 아닌가요?", "근로계약"),

    # 근무조건
    ("주말에 계속 근무하고 있는데 수당이 없어요", "근무조건"),
    ("일과 중 휴게시간이 없습니다", "근무조건"),
    ("출퇴근 시간이 너무 유동적이에요", "근무조건"),
    ("근로시간 기록을 허위로 작성하라고 해요", "근무조건"),
    ("무급 초과근무를 강요받고 있어요", "근무조건"),

    # 직장내 성희롱
    ("상사가 외모에 대해 말해요", "직장 내 성희롱"),
    ("회식 자리에서 성적인 농담을 들어야 했어요", "직장 내 성희롱"),
    ("성희롱을 신고했더니 불이익을 받았어요", "직장 내 성희롱"),
    ("지속적인 성희롱 발언으로 스트레스를 받고 있어요", "직장 내 성희롱"),
    ("성적 언동이 반복돼요", "직장 내 성희롱"),

    # 직장내 괴롭힘
    ("상사가 반복적으로 모욕적인 말을 해요", "직장 내 괴롭힘"),
    ("부당하게 업무를 계속 떠넘겨요", "직장 내 괴롭힘"),
    ("혼자 일하게 만들어요", "직장 내 괴롭힘"),
    ("회의에서 의도적으로 발언 기회를 주지 않아요", "직장 내 괴롭힘"),
    ("동료들 앞에서 계속 망신을 줘요", "직장 내 괴롭힘"),

    # 직장내 차별
    ("나이 때문에 승진에서 제외됐어요", "직장 내 차별"),
    ("남자 직원만 야근을 면제해줘요", "직장 내 차별"),
    ("비정규직이라 불이익을 받고 있어요", "직장 내 차별"),
    ("경력직과 신입에 대한 대우 차이가 심해요", "직장 내 차별"),
    ("출산휴가 후 인사이동이 됐어요", "직장 내 차별"),

    # 임금체불
    ("월급이 계속 지연되고 있어요", "임금체불"),
    ("잔업수당을 한 번도 받은 적이 없어요", "임금체불"),
    ("퇴직금이 제대로 정산되지 않았어요", "임금체불"),
    ("연차수당이 지급되지 않았어요", "임금체불"),
    ("임금 일부가 현물로 지급돼요", "임금체불"),

    # 산업재해
    ("작업 중 다쳐도 산재 처리를 안 해줘요", "산업재해"),
    ("출퇴근 중 사고인데 처리가 안 됩니다", "산업재해"),
    ("산재 신청이 거절됐어요", "산업재해"),
    ("치료비가 전액 본인 부담이에요", "산업재해"),
    ("산재 신청 서류 작성이 어려워요", "산업재해"),

    # 노동조합
    ("노조에 가입했더니 불이익을 받았어요", "노동조합"),
    ("노조 활동을 제지받고 있어요", "노동조합"),
    ("단체행동에 참여했다가 징계를 받았어요", "노동조합"),
    ("노조 활동 시간이 줄었어요", "노동조합"),
    ("회사가 노조를 무시해요", "노동조합"),
]

# ✅ 분류용 함수
def classify_text_with_gemini(user_input: str) -> str:
    """텍스트를 분석하여 적절한 카테고리로 분류하는 함수"""
    global model

    if model is None:
        return "모델이 초기화되지 않았습니다"

    prompt = f"""
    다음 문장을 아래 카테고리 중 하나로 분류하세요:
    [부당해고, 부당징계, 근로계약, 근무조건, 직장 내 성희롱, 직장 내 괴롭힘, 직장 내 차별, 임금체불, 산업재해, 노동조합]

    문장: {user_input}
    카테고리:
    """

    try:
        response = model.generate_content(prompt)
        if response.candidates and response.candidates[0].content.parts:
            text = response.candidates[0].content.parts[0].text.strip()
            print(f"Predicted Category: {text}")  # 카테고리 확인

            # 마크다운 서식(**) 제거
            text = text.replace('**', '')

            # "카테고리:" 접두사 제거
            if "카테고리:" in text:
                return text.split("카테고리:")[1].strip()

            # 문장: 부분 제거
            if "문장:" in text and "카테고리:" in text:
                category_part = text.split("카테고리:")[1].strip()
                return category_part

            return text
        return "카테고리를 찾을 수 없습니다"
    except Exception as e:
        print("❌ Gemini API 호출 오류:", e)
        return f"분류 실패: {e}"

# ✅ 분류 API
@router.post("/classify")
async def classify_endpoint(user_input: UserInput):
    """사용자 입력을 받아 카테고리로 분류하는 API 엔드포인트"""
    result = classify_text_with_gemini(user_input.text)
    return {"category": result}